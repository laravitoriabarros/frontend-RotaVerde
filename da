[1mdiff --git a/app/Usuario/cadastrar-imovel.tsx b/app/Usuario/cadastrar-imovel.tsx[m
[1mindex 147f9c6..80809ae 100644[m
[1m--- a/app/Usuario/cadastrar-imovel.tsx[m
[1m+++ b/app/Usuario/cadastrar-imovel.tsx[m
[36m@@ -1,4 +1,4 @@[m
[31m-import React, { useState } from 'react';[m
[32m+[m[32mimport React, { useState } from "react";[m
 import {[m
   View,[m
   Text,[m
[36m@@ -8,140 +8,221 @@[m [mimport {[m
   ScrollView,[m
   Image,[m
   Alert,[m
[31m-} from 'react-native';[m
[31m-import { useRouter } from 'expo-router';[m
[31m-import Icon from 'react-native-vector-icons/Feather';[m
[31m-import * as Location from 'expo-location';[m
[31m-import { Picker } from '@react-native-picker/picker';[m
[32m+[m[32m} from "react-native";[m
[32m+[m[32mimport { useRouter } from "expo-router";[m
[32m+[m[32mimport Icon from "react-native-vector-icons/Feather";[m
[32m+[m[32mimport MapView, { Marker } from "react-native-maps";[m
[32m+[m[32mimport { Picker } from "@react-native-picker/picker";[m
[32m+[m[32mimport { useMutation } from "@tanstack/react-query";[m
[32m+[m[32mimport { getAddressFromCoordinates } from '~/utils/location';[m
 [m
 export default function CadastrarImovel() {[m
   const router = useRouter();[m
 [m
[31m-  const [nome, setNome] = useState('');[m
[31m-  const [tipoImovel, setTipoImovel] = useState('');[m
[31m-  const [lixoReciclavel, setLixoReciclavel] = useState('');[m
[31m-  const [localizacao, setLocalizacao] = useState('');[m
[32m+[m[32m  const [nome, setNome] = useState("");[m
[32m+[m[32m  const [tipoImovel, setTipoImovel] = useState("");[m
[32m+[m[32m  const [lixoReciclavel, setLixoReciclavel] = useState("");[m
[32m+[m[32m  const [localizacao, setLocalizacao] = useState<{ latitude: number; longitude: number } | null>(null);[m
[32m+[m[32m  const [mostrarMapa, setMostrarMapa] = useState(false);[m
 [m
   const handleGoBack = () => {[m
     router.back();[m
   };[m
 [m
[31m-  const handleSubmit = () => {[m
[31m-    console.log({[m
[31m-      nome,[m
[31m-      tipoImovel,[m
[31m-      lixoReciclavel,[m
[31m-      localizacao,[m
[32m+[m[32m  const handleMapPress = (event: { nativeEvent: { coordinate: { latitude: number; longitude: number } } }) => {[m
[32m+[m[32m    const { latitude, longitude } = event.nativeEvent.coordinate;[m
[32m+[m[32m    setLocalizacao({ latitude, longitude });[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const cadastrarImovel = async (dados: any) => {[m
[32m+[m[32m    const response = await fetch(`http://127.0.0.1:8000/cadastrar_residencias/uid-de-teste`, {[m
[32m+[m[32m      method: "POST",[m
[32m+[m[32m      headers: { "Content-Type": "application/json" },[m
[32m+[m[32m      body: JSON.stringify(dados),[m
     });[m
 [m
[31m-    router.push('/Usuario/final-cad-imovel');[m
[32m+[m[32m    if (!response.ok) {[m
[32m+[m[32m      const errorData = await response.json().catch(() => ({ message: "Erro desconhecido" }));[m
[32m+[m[32m      throw new Error(errorData.message || "Erro ao cadastrar o im√≥vel");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return response.json();[m
   };[m
 [m
[31m-  const obterLocalizacao = async () => {[m
[31m-    try {[m
[31m-      const { status } = await Location.requestForegroundPermissionsAsync();[m
[31m-      if (status !== 'granted') {[m
[31m-        Alert.alert('Permiss√£o negada', 'N√£o foi poss√≠vel acessar a localiza√ß√£o.');[m
[31m-        return;[m
[31m-      }[m
[31m-[m
[31m-      const location = await Location.getCurrentPositionAsync({});[m
[31m-      const [address] = await Location.reverseGeocodeAsync(location.coords);[m
[31m-[m
[31m-      if (address) {[m
[31m-        const texto = `${address.street ?? ''}, ${address.subregion ?? ''} - ${address.city ?? ''}`;[m
[31m-        setLocalizacao(texto.trim());[m
[31m-      }[m
[31m-    } catch (error) {[m
[31m-      Alert.alert('Erro', 'N√£o foi poss√≠vel obter a localiza√ß√£o.');[m
[32m+[m[32m  const mutation = useMutation({[m
[32m+[m[32m    mutationFn: cadastrarImovel,[m
[32m+[m[32m    onSuccess: () => {[m
[32m+[m[32m      Alert.alert("Sucesso!", "Im√≥vel cadastrado com sucesso.");[m
[32m+[m[32m      router.push("/Usuario/final-cad-imovel");[m[41m [m
[32m+[m[32m    },[m
[32m+[m[32m    onError: (error) => {[m
[32m+[m[32m      Alert.alert("Erro", `N√£o foi poss√≠vel cadastrar o im√≥vel: ${error.message}`);[m
[32m+[m[32m    },[m
[32m+[m[32m  });[m
[32m+[m
[32m+[m[32m  const handleSubmit = () => {[m
[32m+[m[32m    if (!nome || !tipoImovel || !localizacao) {[m
[32m+[m[32m      Alert.alert("Aten√ß√£o", "Por favor, preencha todos os campos obrigat√≥rios (Nome, Tipo de Im√≥vel e Localiza√ß√£o).");[m
[32m+[m[32m      return;[m
     }[m
[32m+[m[32m    if (!lixoReciclavel) {[m
[32m+[m[32m      Alert.alert("Aten√ß√£o", "Por favor, informe se h√° lixo recicl√°vel para coleta.");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    const dados = {[m
[32m+[m[32m      nome,[m[41m [m
[32m+[m[32m      tipoImovel,[m
[32m+[m[32m      lixoReciclavel: lixoReciclavel === "sim" ? true : false,[m[41m [m
[32m+[m[32m      endereco: {[m
[32m+[m[32m        logradouro: "Rua Exemplo",[m
[32m+[m[32m        numero: "123",[m
[32m+[m[32m        bairro: "Centro",[m
[32m+[m[32m        cidade: "S√£o Paulo",[m
[32m+[m[32m        estado: "SP",[m[41m [m
[32m+[m[32m        cep: "00000-000",[m
[32m+[m[32m      },[m
[32m+[m[32m      location: {[m
[32m+[m[32m        latitude: localizacao.latitude,[m
[32m+[m[32m        longitude: localizacao.longitude,[m
[32m+[m[32m      },[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    mutation.mutate(dados);[m
   };[m
 [m
[32m+[m[41m [m
   return ([m
     <View style={styles.container}>[m
[31m-      <View style={styles.header}>[m
[31m-        <TouchableOpacity onPress={handleGoBack} style={styles.backButton}>[m
[31m-          <Icon name="arrow-left" size={24} color="#4EC063" />[m
[31m-        </TouchableOpacity>[m
[31m-      </View>[m
[31m-[m
[31m-      <Image source={require('../../assets/images/web.png')} style={styles.image} />[m
[31m-[m
[31m-      <Text style={styles.title}>Vamos come√ßar!</Text>[m
[31m-[m
[31m-      <ScrollView contentContainerStyle={styles.form}>[m
[31m-        <View style={styles.inputContainer}>[m
[31m-          <Text style={styles.label}>Nome</Text>[m
[31m-          <TextInput[m
[31m-            style={styles.input}[m
[31m-            placeholder="Digite como quer chamar seu im√≥vel"[m
[31m-            value={nome}[m
[31m-            onChangeText={setNome}[m
[31m-          />[m
[31m-        </View>[m
[32m+[m[32m      {mostrarMapa ? ([m
[32m+[m[32m        <View style={{ flex: 1 }}>[m
[32m+[m[32m          <MapView[m
[32m+[m[32m            style={styles.fullScreenMap}[m
[32m+[m[32m            initialRegion={{[m
[32m+[m[32m              latitude: localizacao?.latitude || -9.6498487,[m[41m [m
[32m+[m[32m              longitude: localizacao?.longitude || -35.7089492,[m
[32m+[m[32m              latitudeDelta: 0.01,[m
[32m+[m[32m              longitudeDelta: 0.01,[m
[32m+[m[32m            }}[m
[32m+[m[32m            provider="google"[m
[32m+[m[32m            onPress={handleMapPress}[m
[32m+[m[32m          >[m
[32m+[m[32m            {localizacao && ([m
[32m+[m[32m              <Marker[m
[32m+[m[32m                coordinate={localizacao}[m
[32m+[m[32m                title="Local selecionado"[m
[32m+[m[32m                description="Toque para mover o pin" // Adicione uma descri√ß√£o √∫til[m
[32m+[m[32m              />[m
[32m+[m[32m            )}[m
[32m+[m[32m          </MapView>[m
 [m
[31m-        <View style={styles.inputContainer}>[m
[31m-          <Text style={styles.label}>Escolha o tipo de im√≥vel</Text>[m
[31m-          <View style={styles.pickerContainer}>[m
[31m-            <Picker[m
[31m-              selectedValue={tipoImovel}[m
[31m-              onValueChange={(itemValue) => setTipoImovel(itemValue)}[m
[31m-              style={styles.picker}[m
[32m+[m[32m          {localizacao && ([m
[32m+[m[32m            <TouchableOpacity[m
[32m+[m[32m              onPress={() => {[m
[32m+[m[32m                setMostrarMapa(false);[m
[32m+[m[32m                Alert.alert("Localiza√ß√£o Capturada", `Latitude: ${localizacao.latitude.toFixed(6)}, Longitude: ${localizacao.longitude.toFixed(6)}`);[m
[32m+[m[32m              }}[m
[32m+[m[32m              style={styles.confirmMapButton}[m
             >[m
[31m-              <Picker.Item label="Clique aqui para escolher" value="" />[m
[31m-              <Picker.Item label="Resid√™ncia" value="residencia" />[m
[31m-              <Picker.Item label="Com√©rcio" value="comercio" />[m
[31m-              <Picker.Item label="Estabelecimento p√∫blico" value="publico" />[m
[31m-            </Picker>[m
[31m-          </View>[m
[31m-        </View>[m
[32m+[m[32m              <Text style={styles.confirmMapText}>Confirmar Localiza√ß√£o</Text>[m
[32m+[m[32m            </TouchableOpacity>[m
[32m+[m[32m          )}[m
 [m
[31m-        <View style={styles.inputContainer}>[m
[31m-          <Text style={styles.label}>Tem lixo recicl√°vel para coleta?</Text>[m
[31m-          <View style={styles.pickerContainer}>[m
[31m-            <Picker[m
[31m-              selectedValue={lixoReciclavel}[m
[31m-              onValueChange={(itemValue) => setLixoReciclavel(itemValue)}[m
[31m-              style={styles.picker}[m
[31m-            >[m
[31m-              <Picker.Item label="Clique aqui para escolher" value="" />[m
[31m-              <Picker.Item label="Sim" value="sim" />[m
[31m-              <Picker.Item label="N√£o" value="nao" />[m
[31m-            </Picker>[m
[31m-          </View>[m
[32m+[m[32m          <TouchableOpacity[m
[32m+[m[32m            onPress={() => {[m
[32m+[m[32m              setLocalizacao(null);[m[41m [m
[32m+[m[32m              setMostrarMapa(false);[m
[32m+[m[32m            }}[m
[32m+[m[32m            style={styles.cancelMapButton}[m
[32m+[m[32m          >[m
[32m+[m[32m            <Text style={styles.cancelMapText}>Cancelar</Text>[m
[32m+[m[32m          </TouchableOpacity>[m
         </View>[m
[31m-[m
[31m-        <View style={styles.inputContainer}>[m
[31m-          <Text style={styles.label}>Adicione a Localiza√ß√£o</Text>[m
[31m-          <View style={styles.inputWithIcon}>[m
[31m-            <TextInput[m
[31m-              style={[styles.input, { flex: 1 }]}[m
[31m-              placeholder="Digite a localiza√ß√£o do im√≥vel"[m
[31m-              value={localizacao}[m
[31m-              onChangeText={setLocalizacao}[m
[31m-            />[m
[31m-            <TouchableOpacity onPress={obterLocalizacao} style={styles.iconButton}>[m
[31m-              <Icon name="map-pin" size={20} color="#3629B7" />[m
[32m+[m[32m      ) : ([m
[32m+[m[41m        [m
[32m+[m[32m        <>[m
[32m+[m[32m          <View style={styles.header}>[m
[32m+[m[32m            <TouchableOpacity onPress={handleGoBack} style={styles.backButton}>[m
[32m+[m[32m              <Icon name="arrow-left" size={24} color="#4EC063" />[m
             </TouchableOpacity>[m
           </View>[m
[31m-        </View>[m
 [m
[31m-        <TouchableOpacity style={styles.button} onPress={handleSubmit}>[m
[31m-          <Text style={styles.buttonText}>Criar</Text>[m
[31m-        </TouchableOpacity>[m
[31m-      </ScrollView>[m
[32m+[m[32m          <Image source={require("../../assets/images/web.png")} style={styles.image} />[m
[32m+[m
[32m+[m[32m          <Text style={styles.title}>Vamos come√ßar!</Text>[m
[32m+[m
[32m+[m[32m          <ScrollView contentContainerStyle={styles.form}>[m
[32m+[m[32m            <View style={styles.inputContainer}>[m
[32m+[m[32m              <Text style={styles.label}>Nome</Text>[m
[32m+[m[32m              <TextInput[m
[32m+[m[32m                style={styles.input}[m
[32m+[m[32m                placeholder="Digite como quer chamar seu im√≥vel"[m
[32m+[m[32m                value={nome}[m
[32m+[m[32m                onChangeText={setNome}[m
[32m+[m[32m              />[m
[32m+[m[32m            </View>[m
[32m+[m
[32m+[m[32m            <View style={styles.inputContainer}>[m
[32m+[m[32m              <Text style={styles.label}>Escolha o tipo de im√≥vel</Text>[m
[32m+[m[32m              <View style={styles.pickerContainer}>[m
[32m+[m[32m                <Picker selectedValue={tipoImovel} onValueChange={setTipoImovel} style={styles.picker}>[m
[32m+[m[32m                  <Picker.Item label="Clique aqui para escolher" value="" />[m
[32m+[m[32m                  <Picker.Item label="Resid√™ncia" value="residencia" />[m
[32m+[m[32m                  <Picker.Item label="Com√©rcio" value="comercio" />[m
[32m+[m[32m                  <Picker.Item label="Estabelecimento p√∫blico" value="publico" />[m
[32m+[m[32m                </Picker>[m
[32m+[m[32m              </View>[m
[32m+[m[32m            </View>[m
[32m+[m
[32m+[m[32m            <View style={styles.inputContainer}>[m
[32m+[m[32m              <Text style={styles.label}>Tem lixo recicl√°vel para coleta?</Text>[m
[32m+[m[32m              <View style={styles.pickerContainer}>[m
[32m+[m[32m                <Picker selectedValue={lixoReciclavel} onValueChange={setLixoReciclavel} style={styles.picker}>[m
[32m+[m[32m                  <Picker.Item label="Clique aqui para escolher" value="" />[m
[32m+[m[32m                  <Picker.Item label="Sim" value="sim" />[m
[32m+[m[32m                  <Picker.Item label="N√£o" value="nao" />[m
[32m+[m[32m                </Picker>[m
[32m+[m[32m              </View>[m
[32m+[m[32m            </View>[m
[32m+[m
[32m+[m[32m            <View style={styles.inputContainer}>[m
[32m+[m[32m              <Text style={styles.label}>Adicione a Localiza√ß√£o</Text>[m
[32m+[m[32m              <View style={styles.inputWithIcon}>[m
[32m+[m[32m                <TextInput[m
[32m+[m[32m                  style={[styles.input, { flex: 1 }]}[m
[32m+[m[32m                  placeholder="Toque no √≠cone para abrir o mapa"[m
[32m+[m[32m                  value={localizacao ? `Lat: ${localizacao.latitude.toFixed(4)}, Lon: ${localizacao.longitude.toFixed(4)}` : "Nenhuma localiza√ß√£o selecionada"}[m
[32m+[m[32m                  editable={false}[m
[32m+[m[32m                />[m
[32m+[m[32m                <TouchableOpacity onPress={() => setMostrarMapa(true)} style={styles.iconButton}>[m
[32m+[m[32m                  <Icon name="map-pin" size={24} color="#3629B7" />[m
[32m+[m[32m                </TouchableOpacity>[m
[32m+[m[32m              </View>[m
[32m+[m[32m            </View>[m
[32m+[m
[32m+[m[32m            <TouchableOpacity[m
[32m+[m[32m              style={styles.button}[m
[32m+[m[32m              onPress={handleSubmit}[m
[32m+[m[32m              disabled={mutation.isPending}[m
[32m+[m[32m            >[m
[32m+[m[32m              <Text style={styles.buttonText}>{mutation.isPending ? "Salvando..." : "Criar"}</Text>[m
[32m+[m[32m            </TouchableOpacity>[m
[32m+[m[32m          </ScrollView>[m
[32m+[m[32m        </>[m
[32m+[m[32m      )}[m
     </View>[m
   );[m
 }[m
 [m
[32m+[m
 const styles = StyleSheet.create({[m
   container: {[m
     flex: 1,[m
[31m-    backgroundColor: 'white',[m
[32m+[m[32m    backgroundColor: "white",[m
     paddingTop: 40,[m
   },[m
   header: {[m
[31m-    alignItems: 'flex-start',[m
[32m+[m[32m    alignItems: "flex-start",[m
     paddingLeft: 20,[m
     paddingBottom: 20,[m
   },[m
[36m@@ -151,15 +232,15 @@[m [mconst styles = StyleSheet.create({[m
   image: {[m
     width: 100,[m
     height: 100,[m
[31m-    alignSelf: 'center',[m
[31m-    resizeMode: 'contain',[m
[32m+[m[32m    alignSelf: "center",[m
[32m+[m[32m    resizeMode: "contain",[m
     marginBottom: 10,[m
   },[m
   title: {[m
     fontSize: 28,[m
[31m-    fontWeight: 'bold',[m
[31m-    color: '#3629B7',[m
[31m-    textAlign: 'center',[m
[32m+[m[32m    fontWeight: "bold",[m
[32m+[m[32m    color: "#3629B7",[m
[32m+[m[32m    textAlign: "center",[m
     marginBottom: 20,[m
   },[m
   form: {[m
[36m@@ -170,51 +251,87 @@[m [mconst styles = StyleSheet.create({[m
   },[m
   label: {[m
     fontSize: 16,[m
[31m-    color: '#2F2F2F',[m
[32m+[m[32m    color: "#2F2F2F",[m
     marginBottom: 5,[m
   },[m
   input: {[m
     height: 50,[m
     borderWidth: 1,[m
[31m-    borderColor: '#E0E0E0',[m
[32m+[m[32m    borderColor: "#E0E0E0",[m
     borderRadius: 5,[m
     paddingHorizontal: 15,[m
     fontSize: 16,[m
[31m-    color: '#2F2F2F',[m
[32m+[m[32m    color: "#2F2F2F",[m
   },[m
   inputWithIcon: {[m
[31m-    flexDirection: 'row',[m
[31m-    alignItems: 'center',[m
[32m+[m[32m    flexDirection: "row",[m
[32m+[m[32m    alignItems: "center",[m
   },[m
   iconButton: {[m
[31m-    padding: 12,[m
[31m-    borderWidth: 1,[m
[31m-    borderColor: '#E0E0E0',[m
[31m-    borderLeftWidth: 0,[m
[31m-    borderTopRightRadius: 5,[m
[31m-    borderBottomRightRadius: 5,[m
[31m-    backgroundColor: '#F4F4F4',[m
[32m+[m[32m    padding: 10,[m
[32m+[m[32m    marginLeft: 5,[m
   },[m
   pickerContainer: {[m
     borderWidth: 1,[m
[31m-    borderColor: '#E0E0E0',[m
[32m+[m[32m    borderColor: "#E0E0E0",[m
     borderRadius: 5,[m
[31m-    overflow: 'hidden',[m
[32m+[m[32m    overflow: "hidden",[m
   },[m
   picker: {[m
     height: 50,[m
[31m-    width: '100%',[m
[32m+[m[32m    width: "100%",[m
   },[m
   button: {[m
[31m-    backgroundColor: '#3629B7',[m
[32m+[m[32m    backgroundColor: "#3629B7",[m
     paddingVertical: 15,[m
     borderRadius: 5,[m
[31m-    alignItems: 'center',[m
[32m+[m[32m    alignItems: "center",[m
     marginTop: 10,[m
   },[m
   buttonText: {[m
[31m-    color: 'white',[m
[31m-    fontWeight: 'bold',[m
[32m+[m[32m    color: "white",[m
[32m+[m[32m    fontWeight: "bold",[m
     fontSize: 18,[m
   },[m
[31m-});[m
[32m+[m[32m  fullScreenMap: {[m
[32m+[m[32m    position: "absolute",[m
[32m+[m[32m    top: 0,[m
[32m+[m[32m    bottom: 0,[m
[32m+[m[32m    left: 0,[m
[32m+[m[32m    right: 0,[m
[32m+[m[32m    zIndex: 999,[m
[32m+[m[32m  },[m
[32m+[m[32m  confirmMapButton: {[m
[32m+[m[32m    position: "absolute",[m
[32m+[m[32m    bottom: 80,[m
[32m+[m[32m    left: 20,[m
[32m+[m[32m    right: 20,[m
[32m+[m[32m    backgroundColor: "#3629B7",[m
[32m+[m[32m    padding: 15,[m
[32m+[m[32m    borderRadius: 10,[m
[32m+[m[32m    alignItems: "center",[m
[32m+[m[32m    zIndex: 1000,[m
[32m+[m[32m  },[m
[32m+[m[32m  confirmMapText: {[m
[32m+[m[32m    color: "white",[m
[32m+[m[32m    fontSize: 16,[m
[32m+[m[32m    fontWeight: "bold",[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  cancelMapButton: {[m
[32m+[m[32m    position: "absolute",[m
[32m+[m[32m    bottom: 20,[m
[32m+[m[32m    left: 20,[m
[32m+[m[32m    right: 20,[m
[32m+[m[32m    backgroundColor: "#ccc",[m
[32m+[m[32m    padding: 15,[m
[32m+[m[32m    borderRadius: 10,[m
[32m+[m[32m    alignItems: "center",[m
[32m+[m[32m    zIndex: 1000,[m
[32m+[m[32m  },[m
[32m+[m[32m  cancelMapText: {[m
[32m+[m[32m    color: "#333",[m
[32m+[m[32m    fontSize: 16,[m
[32m+[m[32m    fontWeight: "bold",[m
[32m+[m[32m  },[m
[32m+[m[32m});[m
\ No newline at end of file[m
[1mdiff --git a/app/Usuario/lista-imovel.tsx b/app/Usuario/lista-imovel.tsx[m
[1mindex e076312..63d9fb6 100644[m
[1m--- a/app/Usuario/lista-imovel.tsx[m
[1m+++ b/app/Usuario/lista-imovel.tsx[m
[36m@@ -1,4 +1,5 @@[m
 import React, { useState } from 'react';[m
[32m+[m[32mimport {useImoveis} from '~/providers/Imoveis-contexts';[m
 import {[m
   View,[m
   Text,[m
[36m@@ -22,21 +23,9 @@[m [mexport default function MeusImoveis() {[m
   const router = useRouter();[m
   const [modoExclusao, setModoExclusao] = useState(false);[m
   const [selecionados, setSelecionados] = useState<number[]>([]);[m
[31m-  const [imoveis, setImoveis] = useState<Imovel[]>([[m
[31m-    { id: 1, nome: 'Casa 01', endereco: 'Antares - Rua Sol', status: 'Lixo Recicl√°vel Coleta 1234' },[m
[31m-    { id: 2, nome: 'V√≠ctor Oliveira', endereco: 'Farol - Rua Estrela', status: 'N√£o Recicl√°vel Coleta 1234' },[m
[31m-    { id: 3, nome: 'Loja 01', endereco: 'Benedito Bentes', status: 'Lixo Recicl√°vel Coleta 1234' },[m
[31m-    { id: 4, nome: 'F√°brica 01', endereco: 'Cruz das Almas', status: 'Lixo Recicl√°vel Coleta 1234' },[m
[31m-  ]);[m
[31m-[m
[31m-  const toggleSelecionado = (id: number) => {[m
[31m-    if (selecionados.includes(id)) {[m
[31m-      setSelecionados(selecionados.filter((i) => i !== id));[m
[31m-    } else {[m
[31m-      setSelecionados([...selecionados, id]);[m
[31m-    }[m
[31m-  };[m
[32m+[m[32m  const { imoveis, setImoveis } = useImoveis();[m
 [m
[32m+[m[41m [m
   const confirmarExclusao = () => {[m
     Alert.alert([m
       'Confirmar exclus√£o',[m
[1mdiff --git a/app/Usuario/mapa.tsx b/app/Usuario/mapa.tsx[m
[1mindex 1efae27..a3a0d4e 100644[m
[1m--- a/app/Usuario/mapa.tsx[m
[1m+++ b/app/Usuario/mapa.tsx[m
[36m@@ -4,14 +4,19 @@[m [mimport { Button, Image, Modal, StyleSheet, Text, TouchableOpacity, View } from '[m
 import MapView, { Marker } from 'react-native-maps';[m
 import Icon from 'react-native-vector-icons/Feather';[m
 import CooperativaModal, { Cooperativa } from './CooperativaModal';[m
[32m+[m[32mimport { useImoveis } from '~/providers/Imoveis-contexts';[m[41m [m
 [m
 export default function TelaMapa() {[m
   const router = useRouter();[m
   const [modalVisible, setModalVisible] = React.useState(false);[m
   const [modalCooperativaVisible, setModalCooperativaVisible] = React.useState(false);[m
   const [selectedCooperativa, setSelectedCooperativa] = React.useState<Cooperativa | null>(null);[m
[32m+[m[32m  const [selectedImovel, setSelectedImovel] = React.useState<any>(null); // Estado para o im√≥vel selecionado[m
 [m
[31m-  // Mock cooperativas data (pretend this comes from backend)[m
[32m+[m[32m  // Hook para acessar os im√≥veis do contexto[m
[32m+[m[32m  const { imoveis } = useImoveis();[m
[32m+[m
[32m+[m[32m  // vai fazer o fetch das cooperativas do backend, por enquanto esses sao os dados que viriam[m
   const cooperativas = [[m
     {[m
       id: 1,[m
[36m@@ -25,21 +30,22 @@[m [mexport default function TelaMapa() {[m
       materiaisReciclaveis: ['latinhas', 'garrafas pet', 'papel'],[m
       image: require('../../assets/images/perfil-roxo-homem.png'),[m
     },[m
[31m-    // Adicione mais cooperativas aqui no futuro[m
[32m+[m
   ];[m
 [m
[31m-  const handleNavigate = () => {[m
[32m+[m[32m  const handleImovelPress = (imovel: any) => {[m
[32m+[m[32m    setSelectedImovel(imovel);[m
     setModalVisible(true);[m
   };[m
 [m
   return ([m
     <View style={styles.container}>[m
[31m-      {/* Cabe√ßalho com a logo */}[m
[32m+[m[41m [m
       <View style={styles.header}>[m
         <Image source={require('../../assets/images/logo.png')} style={styles.logo} />[m
       </View>[m
 [m
[31m-      {/* Modal for property info */}[m
[32m+[m[41m   [m
       <Modal[m
         visible={modalVisible}[m
         transparent={true}[m
[36m@@ -60,8 +66,13 @@[m [mexport default function TelaMapa() {[m
             alignItems: 'center'[m
           }}>[m
             <Text style={{ fontSize: 18, fontWeight: 'bold', marginBottom: 10 }}>Im√≥vel Selecionado</Text>[m
[31m-            <Text>Macei√≥, Alagoas</Text>[m
[31m-            {/* Add more property info here if you want */}[m
[32m+[m[32m            {selectedImovel && ([m
[32m+[m[32m              <>[m
[32m+[m[32m                <Text>Nome: {selectedImovel.nome}</Text>[m
[32m+[m[32m                <Text>Endere√ßo: {selectedImovel.endereco}</Text>[m
[32m+[m[32m                <Text>Status: {selectedImovel.status}</Text>[m
[32m+[m[32m              </>[m
[32m+[m[32m            )}[m
             <Button title="Fechar" onPress={() => setModalVisible(false)} />[m
           </View>[m
         </View>[m
[36m@@ -76,26 +87,31 @@[m [mexport default function TelaMapa() {[m
         cooperativa={selectedCooperativa}[m
       />[m
 [m
[31m-      {/* Mapa real */}[m
[31m-      {/* TODO: initial region vai ser a localiza√ß√£o do im√≥vel selecionado */}[m
[32m+[m[41m      [m
       <MapView[m
         style={styles.map}[m
         initialRegion={{[m
[31m-          latitude: -9.6498487,[m
[31m-          longitude: -35.7089492,[m
[32m+[m[32m          latitude: -9.6498487, // Latitude padr√£o (ex: Macei√≥, Alagoas)[m
[32m+[m[32m          longitude: -35.7089492, // Longitude padr√£o[m
           latitudeDelta: 0.0922,[m
           longitudeDelta: 0.0421,[m
         }}[m
         provider="google"[m
       >[m
[31m-        {/* User's property marker */}[m
[31m-        <Marker[m
[31m-          coordinate={{ latitude: -9.6498487, longitude: -35.7089492 }}[m
[31m-          title="Macei√≥"[m
[31m-          description="Macei√≥, Alagoas"[m
[31m-          onPress={handleNavigate}[m
[31m-        />[m
[31m-        {/* Cooperativa marker (green) */}[m
[32m+[m[32m        {imoveis.filter(imovel => imovel.lixoParaColetaHoje === true)[m
[32m+[m[32m        .map((imovel) => ([m
[32m+[m[41m          [m
[32m+[m[32m          <Marker[m
[32m+[m[32m            key={imovel.id}[m
[32m+[m[32m            coordinate={{ latitude: imovel.latitude, longitude: imovel.longitude }}[m
[32m+[m[32m            title={imovel.nome}[m
[32m+[m[32m            description={imovel.endereco}[m
[32m+[m[32m            pinColor="#2F2F2F"[m[41m [m
[32m+[m[32m            onPress={() => handleImovelPress(imovel)}[m
[32m+[m[32m          />[m
[32m+[m[32m        ))}[m
[32m+[m
[32m+[m[41m      [m
         {cooperativas.map((coop) => ([m
           <Marker[m
             key={coop.id}[m
[36m@@ -170,11 +186,11 @@[m [mconst styles = StyleSheet.create({[m
   },[m
   greenArea: {[m
     position: 'absolute',[m
[31m-    left: 50,  // Ajuste o valor conforme a √°rea verde do mapa[m
[31m-    top: 120,  // Ajuste o valor conforme a √°rea verde do mapa[m
[31m-    width: 100, // Ajuste o tamanho da √°rea[m
[31m-    height: 100, // Ajuste o tamanho da √°rea[m
[31m-    backgroundColor: 'transparent', // Torna a √°rea invis√≠vel, mas clic√°vel[m
[32m+[m[32m    left: 50,[m
[32m+[m[32m    top: 120,[m
[32m+[m[32m    width: 100,[m
[32m+[m[32m    height: 100,[m
[32m+[m[32m    backgroundColor: 'transparent',[m
   },[m
   infoText: {[m
     fontSize: 16,[m
[36m@@ -186,16 +202,16 @@[m [mconst styles = StyleSheet.create({[m
   navBar: {[m
     flexDirection: 'row',[m
     justifyContent: 'space-around',[m
[31m-    paddingBottom: 10,  // Ajuste do padding para a barra inferior[m
[32m+[m[32m    paddingBottom: 10,[m
     position: 'absolute',[m
     left: 0,[m
     right: 0,[m
     bottom: 0,[m
[31m-    backgroundColor: 'white', // Barra inferior com fundo branco[m
[32m+[m[32m    backgroundColor: 'white',[m
     borderTopWidth: 1,[m
     borderTopColor: '#E0E0E0',[m
   },[m
   navIcon: {[m
     padding: 10,[m
   },[m
[31m-});[m
[32m+[m[32m});[m
\ No newline at end of file[m
[1mdiff --git a/app/Usuario/tutoriais.tsx b/app/Usuario/tutoriais.tsx[m
[1mindex 11e9962..ec9e104 100644[m
[1m--- a/app/Usuario/tutoriais.tsx[m
[1m+++ b/app/Usuario/tutoriais.tsx[m
[36m@@ -1,97 +1,181 @@[m
[31m-import React from 'react';[m
[31m-import { View, Text, TouchableOpacity, StyleSheet, Image, ScrollView } from 'react-native';[m
[31m-import { useRouter } from 'expo-router'; [m
[31m-import Icon from 'react-native-vector-icons/Feather'; [m
[32m+[m[32mimport { useRouter } from 'expo-router';[m
[32m+[m[32mimport React, { useState } from 'react';[m
[32m+[m[32mimport { Image, Modal, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';[m
[32m+[m[32mimport Icon from 'react-native-vector-icons/Feather';[m
[32m+[m[32mimport { tutorialContent } from './util/tutorialContent';[m
 [m
 export default function Tutoriais() {[m
   const router = useRouter();[m
[32m+[m[32m  const [modalVisible, setModalVisible] = useState(false);[m
[32m+[m[32m  const [selectedMaterial, setSelectedMaterial] = useState('');[m
 [m
[31m-  const handleTutorialClick = (tutorial: string) => {[m
[31m-    console.log(`Tutorial escolhido: ${tutorial}`);[m
[31m-    router.push('/Usuario/ver-tutorial'); [m
[32m+[m[32m  const handleMaterialClick = (material: string) => {[m
[32m+[m[32m    setSelectedMaterial(material);[m
[32m+[m[32m    setModalVisible(true);[m
   };[m
 [m
[31m-  [m
[31m-  const handleNext = () => {[m
[31m-    router.push('/perfil'); [m
[32m+[m[32m  const renderModalContent = () => {[m
[32m+[m[32m    const content = tutorialContent[selectedMaterial];[m
[32m+[m[32m    if (!content) return null;[m
[32m+[m
[32m+[m[32m    const renderText = (item: string | { text: string; style: any }, index: number) => {[m
[32m+[m[32m      if (typeof item === 'string') {[m
[32m+[m[32m        return <Text key={index} style={styles.modalListItem}>‚Ä¢ {item}</Text>;[m
[32m+[m[32m      }[m
[32m+[m[32m      return <Text key={index} style={[styles.modalListItem, item.style]}>‚Ä¢ {item.text}</Text>;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m      <View style={styles.modalContentContainer}>[m
[32m+[m[32m        <View style={styles.modalSection}>[m
[32m+[m[32m          <Text style={styles.modalSectionTitle}>Separa√ß√£o</Text>[m
[32m+[m[32m          <View style={styles.separacaoContainer}>[m
[32m+[m[32m            <View style={styles.separacaoColumn}>[m
[32m+[m[32m              <Text style={styles.separacaoTitleGreen}>Pode:</Text>[m
[32m+[m[32m              {content.content.separacao.pode.map((item, index) => ([m
[32m+[m[32m                <Text key={index} style={styles.separacaoItemGreen}>‚Ä¢ {item}</Text>[m
[32m+[m[32m              ))}[m
[32m+[m[32m            </View>[m
[32m+[m[32m            <View style={styles.separacaoColumn}>[m
[32m+[m[32m              <Text style={styles.separacaoTitleRed}>N√£o pode:</Text>[m
[32m+[m[32m              {content.content.separacao.naoPode.map((item, index) => ([m
[32m+[m[32m                <Text key={index} style={styles.separacaoItemRed}>‚Ä¢ {item}</Text>[m
[32m+[m[32m              ))}[m
[32m+[m[32m            </View>[m
[32m+[m[32m          </View>[m
[32m+[m[32m        </View>[m
[32m+[m
[32m+[m[32m        <View style={styles.modalSection}>[m
[32m+[m[32m          <Text style={styles.modalSectionTitle}>Limpeza</Text>[m
[32m+[m[32m          {content.content.limpeza.map((item, index) => ([m
[32m+[m[32m            renderText(item, index)[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </View>[m
[32m+[m
[32m+[m[32m        <View style={styles.modalSection}>[m
[32m+[m[32m          <Text style={styles.modalSectionTitle}>Prepara√ß√£o</Text>[m
[32m+[m[32m          {content.content.preparacao.map((item, index) => ([m
[32m+[m[32m            renderText(item, index)[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </View>[m
[32m+[m[32m      </View>[m
[32m+[m[32m    );[m
   };[m
 [m
   return ([m
     <View style={styles.container}>[m
[31m-  [m
[31m-      <Image[m
[31m-        source={require('../../assets/images/jogando-lixo.png')} [m
[31m-        style={styles.image}[m
[31m-      />[m
[32m+[m[32m      <ScrollView contentContainerStyle={styles.scrollView}>[m
[32m+[m[32m        <Text style={styles.h1}>Como participar da coleta seletiva?</Text>[m
 [m
[31m-      {/* T√≠tulo */}[m
[31m-      <Text style={styles.title}>Vamos Aprender!</Text>[m
[31m-      <Text style={styles.subtitle}>Clique em qual tutorial voc√™ quer ver!</Text>[m
[32m+[m[32m        <Text style={styles.h3}>[m
[32m+[m[32m          Tudo o que voc√™ precisa saber para separar, preparar e entregar seus recicl√°veis corretamente.[m
[32m+[m[32m        </Text>[m
 [m
[31m-      {/* ScrollView para permitir rolar at√© o final */}[m
[31m-      <ScrollView contentContainerStyle={styles.scrollView}>[m
[31m-        {/* Cards de op√ß√µes de tutorial */}[m
[31m-        <TouchableOpacity[m
[31m-          style={styles.card}[m
[31m-          onPress={() => handleTutorialClick('Como separar o lixo')}[m
[31m-        >[m
[31m-          <Text style={styles.cardTitle}>Como separar o lixo</Text>[m
[31m-          <Text style={styles.cardDescription}>Aprenda a facilitar sua coleta!</Text>[m
[31m-        </TouchableOpacity>[m
[32m+[m[32m        <View style={styles.divider} />[m
 [m
[31m-        <TouchableOpacity[m
[31m-          style={styles.card}[m
[31m-          onPress={() => handleTutorialClick('Como separar lixo org√¢nico')}[m
[31m-        >[m
[31m-          <Text style={styles.cardTitle}>Como separar lixo org√¢nico</Text>[m
[31m-          <Text style={styles.cardDescription}>√â mais f√°cil do que parece!</Text>[m
[31m-        </TouchableOpacity>[m
[32m+[m[32m        <Text style={styles.h1}>Por que reciclar?</Text>[m
 [m
[31m-        <TouchableOpacity[m
[31m-          style={styles.card}[m
[31m-          onPress={() => handleTutorialClick('Como lidar com vidro')}[m
[31m-        >[m
[31m-          <Text style={styles.cardTitle}>Como lidar com vidro</Text>[m
[31m-          <Text style={styles.cardDescription}>Cuidado para n√£o machucar quem recolhe!</Text>[m
[31m-        </TouchableOpacity>[m
[32m+[m[32m        <View style={styles.listContainer}>[m
[32m+[m[32m          <Text style={styles.listItem}>[m
[32m+[m[32m            ‚Ä¢ Protege o meio ambiente - Reduzimos a quantidade de lixo nos aterros e evitamos a polui√ß√£o do solo, da √°gua e do ar.[m
[32m+[m[32m          </Text>[m
[32m+[m[32m          <Text style={styles.listItem}>[m
[32m+[m[32m            ‚Ä¢ Damos uma nova vida aos materiais - Materiais recicl√°veis podem virar novos produtos, economizando energia e recursos naturais como √°gua e petr√≥leo.[m
[32m+[m[32m          </Text>[m
[32m+[m[32m          <Text style={styles.listItem}>[m
[32m+[m[32m            ‚Ä¢ Apoiamos o trabalho das cooperativas - Voc√™ fortalece o sustento de centenas de fam√≠lias que vivem da reciclagem, promovendo inclus√£o social e dignidade.[m
[32m+[m[32m          </Text>[m
[32m+[m[32m          <Text style={styles.listItem}>[m
[32m+[m[32m            ‚Ä¢ Cuidamos do futuro - Cada embalagem reciclada hoje ajuda a construir um planeta mais limpo e equilibrado para as pr√≥ximas gera√ß√µes.[m
[32m+[m[32m          </Text>[m
[32m+[m[32m        </View>[m
 [m
[31m-        <TouchableOpacity[m
[31m-          style={styles.card}[m
[31m-          onPress={() => handleTutorialClick('O que √© material recicl√°vel')}[m
[31m-        >[m
[31m-          <Text style={styles.cardTitle}>O que √© material recicl√°vel</Text>[m
[31m-          <Text style={styles.cardDescription}>Descubra tudo!</Text>[m
[31m-        </TouchableOpacity>[m
[32m+[m[32m        <Text style={styles.h1}>Como separar e tratar os materiais?</Text>[m
[32m+[m
[32m+[m[32m        <View style={styles.materialButtonsContainer}>[m
[32m+[m[32m          <TouchableOpacity[m
[32m+[m[32m            style={[styles.materialButton, { backgroundColor: '#E31B1B' }]}[m
[32m+[m[32m            onPress={() => handleMaterialClick('plastico')}[m
[32m+[m[32m          >[m
[32m+[m[32m            <Text style={styles.materialButtonText}>Pl√°stico</Text>[m
[32m+[m[32m          </TouchableOpacity>[m
[32m+[m
[32m+[m[32m          <TouchableOpacity[m
[32m+[m[32m            style={[styles.materialButton, { backgroundColor: '#F9C534' }]}[m
[32m+[m[32m            onPress={() => handleMaterialClick('metal')}[m
[32m+[m[32m          >[m
[32m+[m[32m            <Text style={styles.materialButtonText}>Metal</Text>[m
[32m+[m[32m          </TouchableOpacity>[m
[32m+[m
[32m+[m[32m          <TouchableOpacity[m
[32m+[m[32m            style={[styles.materialButton, { backgroundColor: '#4EC063' }]}[m
[32m+[m[32m            onPress={() => handleMaterialClick('vidro')}[m
[32m+[m[32m          >[m
[32m+[m[32m            <Text style={styles.materialButtonText}>Vidro</Text>[m
[32m+[m[32m          </TouchableOpacity>[m
[32m+[m
[32m+[m[32m          <TouchableOpacity[m
[32m+[m[32m            style={[styles.materialButton, { backgroundColor: '#3629B7' }]}[m
[32m+[m[32m            onPress={() => handleMaterialClick('papel')}[m
[32m+[m[32m          >[m
[32m+[m[32m            <Text style={styles.materialButtonText}>Papel</Text>[m
[32m+[m[32m          </TouchableOpacity>[m
[32m+[m[32m        </View>[m
       </ScrollView>[m
 [m
[31m-      {/* Bot√£o "Pr√≥ximo" */}[m
[31m-      <TouchableOpacity style={styles.button} onPress={handleNext}>[m
[31m-        <Text style={styles.buttonText}>Pr√≥ximo</Text>[m
[31m-      </TouchableOpacity>[m
[32m+[m[32m      <Modal[m
[32m+[m[32m        animationType="slide"[m
[32m+[m[32m        transparent={true}[m
[32m+[m[32m        visible={modalVisible}[m
[32m+[m[32m        onRequestClose={() => setModalVisible(false)}[m
[32m+[m[32m      >[m
[32m+[m[32m        <View style={styles.modalOverlay}>[m
[32m+[m[32m          <View style={styles.modalContent}>[m
[32m+[m[32m            <TouchableOpacity[m
[32m+[m[32m              style={styles.closeButton}[m
[32m+[m[32m              onPress={() => setModalVisible(false)}[m
[32m+[m[32m            >[m
[32m+[m[32m              <Text style={styles.closeButtonText}>x</Text>[m
[32m+[m[32m            </TouchableOpacity>[m
[32m+[m[32m            {selectedMaterial && ([m
[32m+[m[32m              <ScrollView style={styles.modalScrollView} showsVerticalScrollIndicator={false}>[m
[32m+[m[32m                <View style={styles.staticContent}>[m
[32m+[m[32m                  <View style={styles.imageContainer}>[m
[32m+[m[32m                    <Image source={tutorialContent[selectedMaterial].image} style={styles.modalImage} />[m
[32m+[m[32m                  </View>[m
[32m+[m[32m                  <View style={styles.darkenedBackground} />[m
[32m+[m[32m                </View>[m
[32m+[m[32m                <Text style={styles.modalTitle}>{tutorialContent[selectedMaterial].title}</Text>[m
[32m+[m[32m                {renderModalContent()}[m
[32m+[m[32m              </ScrollView>[m
[32m+[m[32m            )}[m
[32m+[m[32m          </View>[m
[32m+[m[32m        </View>[m
[32m+[m[32m      </Modal>[m
 [m
       {/* Barra Inferior */}[m
       <View style={styles.navBar}>[m
         <TouchableOpacity[m
           style={styles.navIcon}[m
[31m-          onPress={() => router.push('/Usuario/pagina-inicial')} // P√°gina inicial (home)[m
[32m+[m[32m          onPress={() => router.push('/Usuario/pagina-inicial')}[m
         >[m
           <Icon name="home" size={30} color="#2F2F2F" />[m
         </TouchableOpacity>[m
         <TouchableOpacity[m
           style={styles.navIcon}[m
[31m-          onPress={() => router.push('/Usuario/mapa')} // Mapa[m
[32m+[m[32m          onPress={() => router.push('/Usuario/mapa')}[m
         >[m
           <Icon name="map" size={30} color="#2F2F2F" />[m
         </TouchableOpacity>[m
         <TouchableOpacity[m
           style={styles.navIcon}[m
[31m-          onPress={() => router.push('/Usuario/tutoriais')} // Tutoriais[m
[32m+[m[32m          onPress={() => router.push('/Usuario/tutoriais')}[m
         >[m
           <Icon name="info" size={30} color="#2F2F2F" />[m
         </TouchableOpacity>[m
         <TouchableOpacity[m
           style={styles.navIcon}[m
[31m-          onPress={() => router.push('/perfil')} // Perfil[m
[32m+[m[32m          onPress={() => router.push('/perfil')}[m
         >[m
           <Icon name="user" size={30} color="#2F2F2F" />[m
         </TouchableOpacity>[m
[36m@@ -105,63 +189,184 @@[m [mconst styles = StyleSheet.create({[m
     flex: 1,[m
     backgroundColor: 'white',[m
   },[m
[31m-  image: {[m
[31m-    width: 200,[m
[31m-    height: 200,[m
[31m-    alignSelf: 'center',[m
[31m-    marginTop: 30,[m
[32m+[m[32m  scrollView: {[m
[32m+[m[32m    flexGrow: 1,[m
[32m+[m[32m    padding: 20,[m
[32m+[m[32m    paddingBottom: 80,[m
   },[m
[31m-  title: {[m
[31m-    fontSize: 28,[m
[32m+[m[32m  h1: {[m
[32m+[m[32m    fontSize: 24,[m
     fontWeight: 'bold',[m
     color: '#3629B7',[m
[31m-    textAlign: 'center',[m
[31m-    marginTop: 30,[m
[32m+[m[32m    marginTop: 20,[m
[32m+[m[32m    marginBottom: 10,[m
   },[m
[31m-  subtitle: {[m
[32m+[m[32m  h3: {[m
     fontSize: 18,[m
[31m-    color: '#888888',[m
[31m-    textAlign: 'center',[m
[32m+[m[32m    color: '#666666',[m
     marginBottom: 20,[m
[32m+[m[32m    lineHeight: 24,[m
   },[m
[31m-  scrollView: {[m
[31m-    flexGrow: 1,[m
[32m+[m[32m  divider: {[m
[32m+[m[32m    height: 1,[m
[32m+[m[32m    backgroundColor: '#E0E0E0',[m
[32m+[m[32m    marginVertical: 20,[m
[32m+[m[32m  },[m
[32m+[m[32m  listContainer: {[m
[32m+[m[32m    marginBottom: 20,[m
[32m+[m[32m  },[m
[32m+[m[32m  listItem: {[m
[32m+[m[32m    fontSize: 16,[m
[32m+[m[32m    color: '#444444',[m
[32m+[m[32m    marginBottom: 15,[m
[32m+[m[32m    lineHeight: 22,[m
[32m+[m[32m  },[m
[32m+[m[32m  materialButtonsContainer: {[m
[32m+[m[32m    marginTop: 20,[m
[32m+[m[32m    gap: 15,[m
[32m+[m[32m  },[m
[32m+[m[32m  materialButton: {[m
[32m+[m[32m    backgroundColor: '#3629B7',[m
[32m+[m[32m    padding: 15,[m
[32m+[m[32m    borderRadius: 8,[m
[32m+[m[32m    alignItems: 'center',[m
[32m+[m[32m  },[m
[32m+[m[32m  materialButtonText: {[m
[32m+[m[32m    color: 'white',[m
[32m+[m[32m    fontSize: 18,[m
[32m+[m[32m    fontWeight: 'bold',[m
[32m+[m[32m  },[m
[32m+[m[32m  staticContent: {[m
[32m+[m[32m    position: 'relative',[m
[32m+[m[32m    width: '100%',[m
[32m+[m[32m    marginBottom: 20,[m
[32m+[m[32m  },[m
[32m+[m[32m  imageContainer: {[m
[32m+[m[32m    position: 'relative',[m
[32m+[m[32m    alignItems: 'center',[m
[32m+[m[32m    width: '100%',[m
[32m+[m[32m    zIndex: 1,[m
[32m+[m[32m  },[m
[32m+[m[32m  darkenedBackground: {[m
[32m+[m[32m    position: 'absolute',[m
[32m+[m[32m    top: 50,[m
[32m+[m[32m    left: -20,[m
[32m+[m[32m    right: -20,[m
[32m+[m[32m    bottom: -1000,[m
[32m+[m[32m    backgroundColor: '#EEEEEE',[m
[32m+[m[32m    borderRadius: 50,[m
[32m+[m[32m    zIndex: 0,[m
[32m+[m[32m  },[m
[32m+[m[32m  modalImage: {[m
[32m+[m[32m    borderRadius: 50,[m
[32m+[m[32m    width: 100,[m
[32m+[m[32m    height: 100,[m
[32m+[m[32m    zIndex: 1,[m
[32m+[m[32m  },[m
[32m+[m[32m  modalOverlay: {[m
[32m+[m[32m    flex: 1,[m
[32m+[m[32m    backgroundColor: 'rgba(0, 0, 0, 0.5)',[m
     justifyContent: 'center',[m
[31m-    paddingBottom: 80, // Para garantir que o bot√£o "Pr√≥ximo" esteja vis√≠vel[m
[32m+[m[32m    alignItems: 'center',[m
   },[m
[31m-  card: {[m
[31m-    backgroundColor: '#F5F5F5',[m
[32m+[m[32m  modalContent: {[m
[32m+[m[32m    backgroundColor: 'white',[m
[32m+[m[32m    borderRadius: 20,[m
[32m+[m[32m    width: '90%',[m
[32m+[m[32m    maxWidth: 400,[m
[32m+[m[32m    height: '90%',[m
[32m+[m[32m    maxHeight: 700,[m
[32m+[m[32m    elevation: 5,[m
[32m+[m[32m    position: 'relative',[m
[32m+[m[32m    overflow: 'hidden',[m
[32m+[m[32m  },[m
[32m+[m[32m  modalScrollView: {[m
     padding: 20,[m
[31m-    borderRadius: 10,[m
[31m-    marginVertical: 10,[m
[31m-    elevation: 2,[m
[32m+[m[32m    paddingTop: 60,[m
[32m+[m[32m    paddingBottom: 100,[m
[32m+[m[32m    width: '100%',[m
   },[m
[31m-  cardTitle: {[m
[31m-    fontSize: 18,[m
[32m+[m[32m  modalTitle: {[m
[32m+[m[32m    fontSize: 24,[m
     fontWeight: 'bold',[m
[31m-    color: '#2F2F2F',[m
[32m+[m[32m    color: '#3629B7',[m
[32m+[m[32m    marginBottom: 10,[m
[32m+[m[32m    textAlign: 'center',[m
   },[m
[31m-  cardDescription: {[m
[31m-    marginTop: 5,[m
[31m-    color: '#888888',[m
[32m+[m[32m  modalContentContainer: {[m
[32m+[m[32m    marginTop: 15,[m
[32m+[m[32m    paddingBottom: 60,[m
   },[m
[31m-  button: {[m
[31m-    backgroundColor: '#3629B7',[m
[31m-    paddingVertical: 15,[m
[31m-    borderRadius: 5,[m
[31m-    marginTop: 30,[m
[32m+[m[32m  modalSection: {[m
[32m+[m[32m    marginBottom: 15,[m
[32m+[m[32m    paddingBottom: 5,[m
[32m+[m[32m  },[m
[32m+[m[32m  modalSectionTitle: {[m
[32m+[m[32m    fontSize: 20,[m
[32m+[m[32m    fontWeight: 'bold',[m
[32m+[m[32m    color: '#3629B7',[m
[32m+[m[32m    marginBottom: 8,[m
[32m+[m[32m  },[m
[32m+[m[32m  separacaoContainer: {[m
[32m+[m[32m    flexDirection: 'row',[m
[32m+[m[32m    justifyContent: 'space-between',[m
[32m+[m[32m    gap: 15,[m
[32m+[m[32m  },[m
[32m+[m[32m  separacaoColumn: {[m
[32m+[m[32m    flex: 1,[m
[32m+[m[32m  },[m
[32m+[m[32m  separacaoTitleGreen: {[m
[32m+[m[32m    fontSize: 16,[m
[32m+[m[32m    fontWeight: 'bold',[m
[32m+[m[32m    color: '#4EC063',[m
[32m+[m[32m    marginBottom: 6,[m
[32m+[m[32m  },[m
[32m+[m[32m  separacaoTitleRed: {[m
[32m+[m[32m    fontSize: 16,[m
[32m+[m[32m    fontWeight: 'bold',[m
[32m+[m[32m    color: '#E31B1B',[m
[32m+[m[32m    marginBottom: 6,[m
[32m+[m[32m  },[m
[32m+[m[32m  separacaoItemGreen: {[m
[32m+[m[32m    fontSize: 14,[m
[32m+[m[32m    color: '#4EC063',[m
[32m+[m[32m    marginBottom: 4,[m
[32m+[m[32m  },[m
[32m+[m[32m  separacaoItemRed: {[m
[32m+[m[32m    fontSize: 14,[m
[32m+[m[32m    color: '#E31B1B',[m
[32m+[m[32m    marginBottom: 4,[m
[32m+[m[32m  },[m
[32m+[m[32m  modalListItem: {[m
[32m+[m[32m    fontSize: 14,[m
[32m+[m[32m    color: '#444444',[m
[32m+[m[32m    marginBottom: 4,[m
[32m+[m[32m  },[m
[32m+[m[32m  closeButton: {[m
[32m+[m[32m    position: 'absolute',[m
[32m+[m[32m    top: 10,[m
[32m+[m[32m    right: 20,[m
[32m+[m[32m    backgroundColor: '#E0E0E0',[m
[32m+[m[32m    width: 40,[m
[32m+[m[32m    height: 40,[m
[32m+[m[32m    borderRadius: 20,[m
[32m+[m[32m    justifyContent: 'center',[m
     alignItems: 'center',[m
[32m+[m[32m    elevation: 2,[m
[32m+[m[32m    zIndex: 2,[m
   },[m
[31m-  buttonText: {[m
[31m-    color: 'white',[m
[32m+[m[32m  closeButtonText: {[m
[32m+[m[32m    color: '#444444',[m
[32m+[m[32m    fontSize: 28,[m
     fontWeight: 'bold',[m
[31m-    fontSize: 18,[m
[32m+[m[32m    fontFamily: 'System',[m
[32m+[m[32m    lineHeight: 28,[m
   },[m
   navBar: {[m
     flexDirection: 'row',[m
     justifyContent: 'space-around',[m
     paddingBottom: 10,[m
[31m-    position: 'absolute', // Fixa a barra na parte inferior[m
[32m+[m[32m    position: 'absolute',[m
     left: 0,[m
     right: 0,[m
     bottom: 0,[m
[1mdiff --git a/app/Usuario/util/tutorialContent.ts b/app/Usuario/util/tutorialContent.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..8d5a2c5[m
[1m--- /dev/null[m
[1m+++ b/app/Usuario/util/tutorialContent.ts[m
[36m@@ -0,0 +1,168 @@[m
[32m+[m[32mexport interface StyledText {[m
[32m+[m[32m  text: string;[m
[32m+[m[32m  style: {[m
[32m+[m[32m    color?: string;[m
[32m+[m[32m    fontWeight?: string;[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport interface TutorialContent {[m
[32m+[m[32m  title: string;[m
[32m+[m[32m  image: any;[m
[32m+[m[32m  content: {[m
[32m+[m[32m    separacao: {[m
[32m+[m[32m      pode: string[];[m
[32m+[m[32m      naoPode: string[];[m
[32m+[m[32m    };[m
[32m+[m[32m    limpeza: (string | StyledText)[];[m
[32m+[m[32m    preparacao: (string | StyledText)[];[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport const tutorialContent: Record<string, TutorialContent> = {[m
[32m+[m[32m  plastico: {[m
[32m+[m[32m    title: 'Pl√°stico',[m
[32m+[m[32m    image: require('../../../assets/images/plastico.png'),[m
[32m+[m[32m    content: {[m
[32m+[m[32m      separacao: {[m
[32m+[m[32m        pode: [[m
[32m+[m[32m          'Garrafas PET',[m
[32m+[m[32m          'Embalagens de produtos de limpeza',[m
[32m+[m[32m          'Sacos e sacolas',[m
[32m+[m[32m          'Copos e pratos descart√°veis',[m
[32m+[m[32m          'Brinquedos de pl√°stico',[m
[32m+[m[32m          'Tampas de garrafa',[m
[32m+[m[32m          'Embalagens de alimentos'[m
[32m+[m[32m        ],[m
[32m+[m[32m        naoPode: [[m
[32m+[m[32m          'Pl√°sticos metalizados',[m
[32m+[m[32m          'Embalagens de salgadinhos',[m
[32m+[m[32m          'Fitas adesivas',[m
[32m+[m[32m          'Pl√°sticos com res√≠duos de gordura',[m
[32m+[m[32m          'Brinquedos',[m
[32m+[m[32m          'Isopor'[m
[32m+[m[32m        ][m
[32m+[m[32m      },[m
[32m+[m[32m      limpeza: [[m
[32m+[m[32m        'Lave com √°gua e sab√£o (Pode usar a √°gua do enx√°gue da lou√ßa)',[m
[32m+[m[32m        'Remova r√≥tulos e tampas',[m
[32m+[m[32m        'Deixe secar completamente',[m
[32m+[m[32m        'Verifique se n√£o h√° res√≠duos'[m
[32m+[m[32m      ],[m
[32m+[m[32m      preparacao: [[m
[32m+[m[32m        'Amasse para ocupar menos espa√ßo',[m
[32m+[m[32m        'Separe por tipo (PET, PEAD, PVC)',[m
[32m+[m[32m        'Use sacos transparentes ou caixas ventiladas.',[m
[32m+[m[32m        'Identifique o tipo de pl√°stico'[m
[32m+[m[32m      ][m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m[32m  metal: {[m
[32m+[m[32m    title: 'Metal',[m
[32m+[m[32m    image: require('../../../assets/images/metal.png'),[m
[32m+[m[32m    content: {[m
[32m+[m[32m      separacao: {[m
[32m+[m[32m        pode: [[m
[32m+[m[32m          'Latas de alum√≠nio',[m
[32m+[m[32m          'Latas de a√ßo',[m
[32m+[m[32m          'Tampas de metal',[m
[32m+[m[32m          'Panelas sem cabo',[m
[32m+[m[32m          'Arames',[m
[32m+[m[32m          'Pregos e parafusos'[m
[32m+[m[32m        ],[m
[32m+[m[32m        naoPode: [[m
[32m+[m[32m          'Latas de tinta',[m
[32m+[m[32m          'Latas de verniz',[m
[32m+[m[32m          'Aeros√≥is vazios',[m
[32m+[m[32m          'Clipes',[m
[32m+[m[32m          'Grampos'[m
[32m+[m[32m        ][m
[32m+[m[32m      },[m
[32m+[m[32m      limpeza: [[m
[32m+[m[32m        'Lave com √°gua e sab√£o',[m
[32m+[m[32m        'Remova r√≥tulos',[m
[32m+[m[32m        'Lave com √°gua para tirar restos de alimentos ou bebidas.',[m
[32m+[m[32m        'Deixe secar completamente',[m
[32m+[m[32m        'Verifique se n√£o h√° res√≠duos',[m
[32m+[m[32m        'Se for lata de √≥leo, enx√°gue bem por dentro.'[m
[32m+[m[32m      ],[m
[32m+[m[32m      preparacao: [[m
[32m+[m[32m        'Separe por tipo de metal',[m
[32m+[m[32m        'Verifique se est√° limpo',[m
[32m+[m[32m        'Remova r√≥tulos e res√≠duos',[m
[32m+[m[32m        'Amasse para economizar espa√ßo'[m
[32m+[m[32m      ][m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m[32m  vidro: {[m
[32m+[m[32m    title: 'Vidro',[m
[32m+[m[32m    image: require('../../../assets/images/vidro.png'),[m
[32m+[m[32m    content: {[m
[32m+[m[32m      separacao: {[m
[32m+[m[32m        pode: [[m
[32m+[m[32m          'Garrafas',[m
[32m+[m[32m          'Potes',[m
[32m+[m[32m          'Frascos',[m
[32m+[m[32m          'Copos',[m
[32m+[m[32m          'Vidros de conserva'[m
[32m+[m[32m        ],[m
[32m+[m[32m        naoPode: [[m
[32m+[m[32m          'Espelhos',[m
[32m+[m[32m          'Vidros temperados',[m
[32m+[m[32m          'Lou√ßas',[m
[32m+[m[32m          'Cristais',[m
[32m+[m[32m          'L√¢mpadas',[m
[32m+[m[32m          'Tubos de TV'[m
[32m+[m[32m        ][m
[32m+[m[32m      },[m
[32m+[m[32m      limpeza: [[m
[32m+[m[32m        'Enx√°gue os recipientes para tirar res√≠duos.',[m
[32m+[m[32m        'Deixe secar naturalmente.',[m
[32m+[m[32m        'Cuidado ao manusear se houver trincas.',[m
[32m+[m[32m      ],[m
[32m+[m[32m      preparacao: [[m
[32m+[m[32m        { text: 'NUNCA quebre o vidro!', style: { color: '#E31B1B', fontWeight: 'bold' } },[m
[32m+[m[32m        'Embrulhe cacos em jornal',[m
[32m+[m[32m        'Separe por cor (transparente, verde, √¢mbar)',[m
[32m+[m[32m        'N√£o misture com outros materiais',[m
[32m+[m[32m        'Coloque em uma caixa resistente identificada (‚ÄúCUIDADO: VIDRO‚Äù).'[m
[32m+[m[32m      ][m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m[32m  papel: {[m
[32m+[m[32m    title: 'Papel',[m
[32m+[m[32m    image: require('../../../assets/images/papel.png'),[m
[32m+[m[32m    content: {[m
[32m+[m[32m      separacao: {[m
[32m+[m[32m        pode: [[m
[32m+[m[32m          'Jornais',[m
[32m+[m[32m          'Revistas',[m
[32m+[m[32m          'Folhas de papel',[m
[32m+[m[32m          'Caixas de papel√£o',[m
[32m+[m[32m          'Sacos de papel',[m
[32m+[m[32m          'Envelopes'[m
[32m+[m[32m        ],[m
[32m+[m[32m        naoPode: [[m
[32m+[m[32m          'Papel higi√™nico',[m
[32m+[m[32m          'Papel carbono',[m
[32m+[m[32m          'Papel plastificado',[m
[32m+[m[32m          'Papel parafinado',[m
[32m+[m[32m          'Fitas adesivas',[m
[32m+[m[32m          'Papel de presente metalizado'[m
[32m+[m[32m        ][m
[32m+[m[32m      },[m
[32m+[m[32m      limpeza: [[m
[32m+[m[32m        'Remova clipes e grampos',[m
[32m+[m[32m        'Remova fitas adesivas',[m
[32m+[m[32m        'Dobre para ocupar menos espa√ßo',[m
[32m+[m[32m        'Mantenha seco'[m
[32m+[m[32m      ],[m
[32m+[m[32m      preparacao: [[m
[32m+[m[32m        'Separe por tipo',[m
[32m+[m[32m        'Verifique se est√° limpo',[m
[32m+[m[32m        'Remova elementos n√£o recicl√°veis',[m
[32m+[m[32m        'Dobre para economizar espa√ßo'[m
[32m+[m[32m      ][m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
\ No newline at end of file[m
[1mdiff --git a/app/Usuario/ver-imovel.tsx b/app/Usuario/ver-imovel.tsx[m
[1mindex f55b617..699be0f 100644[m
[1m--- a/app/Usuario/ver-imovel.tsx[m
[1m+++ b/app/Usuario/ver-imovel.tsx[m
[36m@@ -1,39 +1,106 @@[m
[31m-import React, { useState } from 'react';[m
[32m+[m[32mimport React, { useState, useEffect } from 'react';[m
 import {[m
[31m-  View,[m
[31m-  Text,[m
[31m-  TouchableOpacity,[m
[31m-  StyleSheet,[m
[31m-  TextInput,[m
[31m-  Alert,[m
[31m-  ScrollView,[m
[32m+[m[32m  View, Text, TouchableOpacity, StyleSheet,[m
[32m+[m[32m  TextInput, Alert, ScrollView,[m
 } from 'react-native';[m
 import { useRouter } from 'expo-router';[m
 import Icon from 'react-native-vector-icons/Feather';[m
 import { Picker } from '@react-native-picker/picker';[m
[32m+[m[32mimport { useImoveis } from '~/providers/Imoveis-contexts';[m[41m [m
[32m+[m
 [m
 export default function VerImovel() {[m
   const router = useRouter();[m
[32m+[m[32m  const { imoveis, setImoveis } = useImoveis();[m
[32m+[m
[32m+[m[32m  // Vamos editar o im√≥vel com id = 1 (exemplo)[m
[32m+[m[32m  const imovel = imoveis.find(i => i.id === 1);[m
 [m
[32m+[m[32m  // Estados locais para edi√ß√£o[m
   const [modoEdicao, setModoEdicao] = useState(false);[m
[31m-  const [nome, setNome] = useState('Casa 01');[m
[31m-  const [tipo, setTipo] = useState('Residencial');[m
[31m-  const [endereco, setEndereco] = useState('Antares - Rua Sol');[m
[32m+[m[32m  const [nome, setNome] = useState(imovel?.nome ?? '');[m
[32m+[m[32m  const [tipo, setTipo] = useState('Residencial'); // Seu modelo n√£o tem tipo, voc√™ pode adicionar[m
[32m+[m[32m  const [endereco, setEndereco] = useState(imovel?.endereco ?? '');[m
   const [lixoHoje, setLixoHoje] = useState('Sim');[m
 [m
[32m+[m[41m [m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m  if (imovel) {[m
[32m+[m[32m    setNome(imovel.nome);[m
[32m+[m[32m    setEndereco(imovel.endereco);[m
[32m+[m[32m    setLixoHoje(imovel.lixoParaColetaHoje ? 'Sim' : 'N√£o');[m
[32m+[m[32m  }[m
[32m+[m[32m}, [imovel]);[m
[32m+[m
   const handleGoBack = () => {[m
[32m+[m[32m  if (router.canGoBack()) {[m
     router.back();[m
[31m-  };[m
[32m+[m[32m  } else {[m
[32m+[m[32m    router.push('/');[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
 [m
   const salvarPopup = () => {[m
     Alert.alert('Tudo certo!', 'Dados salvos com sucesso!');[m
   };[m
 [m
[32m+[m[32m  const handleSalvarLixoHoje = () => {[m
[32m+[m[32m    if (!imovel) return;[m
[32m+[m
[32m+[m[32m    const imoveisAtualizados = imoveis.map(i =>[m
[32m+[m[32m        i.id === imovel.id[m
[32m+[m[32m            ? { ...i, lixoParaColetaHoje: lixoHoje === 'Sim' } // <-- ATUALIZA O NOVO CAMPO[m
[32m+[m[32m            : i[m
[32m+[m[32m    );[m
[32m+[m[32m    setImoveis(imoveisAtualizados);[m
[32m+[m[32m    Alert.alert('Sucesso!', 'Informa√ß√£o de coleta atualizada!');[m
[32m+[m[32m};[m
[32m+[m
   const handleSalvarEdicao = () => {[m
[32m+[m[32m    if (!imovel) return;[m
[32m+[m
[32m+[m[32m    // Atualiza im√≥vel no contexto[m
[32m+[m[32m    const imoveisAtualizados = imoveis.map(i =>[m
[32m+[m[32m      i.id === imovel.id[m
[32m+[m[32m        ? { ...i, nome, endereco /* , tipo se existir */ }[m
[32m+[m[32m        : i[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    <View style={styles.dropdownContainer}>[m
[32m+[m[32m      <Text style={styles.label}>Hoje tem lixo recicl√°vel para coleta?</Text>[m
[32m+[m[32m      <View style={styles.pickerWrapper}>[m
[32m+[m[32m        <Picker[m
[32m+[m[32m            selectedValue={lixoHoje}[m
[32m+[m[32m            onValueChange={setLixoHoje} // Permita que o Picker mude o estado local[m
[32m+[m[32m            style={styles.picker}[m
[32m+[m[32m            enabled={!modoEdicao} // Mantenha disabled se estiver em modo de edi√ß√£o de outros campos[m
[32m+[m[32m        >[m
[32m+[m[32m            <Picker.Item label="Sim" value="Sim" />[m
[32m+[m[32m            <Picker.Item label="N√£o" value="N√£o" />[m
[32m+[m[32m        </Picker>[m
[32m+[m[32m      </View>[m
[32m+[m[32m      <TouchableOpacity[m
[32m+[m[32m        style={styles.smallButton}[m
[32m+[m[32m        onPress={handleSalvarLixoHoje} // <-- CHAMA A NOVA FUN√á√ÉO DE SALVAR[m
[32m+[m[32m        disabled={modoEdicao}[m
[32m+[m[32m      >[m
[32m+[m[32m        <Text style={styles.smallButtonText}>Salvar</Text>[m
[32m+[m[32m      </TouchableOpacity>[m
[32m+[m[32m    </View>[m
[32m+[m
[32m+[m[32m    setImoveis(imoveisAtualizados);[m
     setModoEdicao(false);[m
     Alert.alert('Tudo certo!', 'Dados salvos com sucesso!');[m
   };[m
 [m
[32m+[m[32m  if (!imovel) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      <View style={styles.container}>[m
[32m+[m[32m        <Text>Im√≥vel n√£o encontrado.</Text>[m
[32m+[m[32m      </View>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
   return ([m
     <View style={styles.container}>[m
       <ScrollView contentContainerStyle={{ paddingBottom: 120 }}>[m
[36m@@ -103,24 +170,27 @@[m [mexport default function VerImovel() {[m
           <Text style={styles.dividerText}>Informa√ß√µes de Hoje</Text>[m
         </View>[m
 [m
[31m-        {/* Removido a parte de coleta de lixo */}[m
         <View style={styles.dropdownContainer}>[m
           <Text style={styles.label}>Hoje tem lixo recicl√°vel para coleta?</Text>[m
[31m-          <View style={styles.pickerWrapper}>[m
[31m-            <Picker[m
[31m-              selectedValue={lixoHoje}[m
[31m-              onValueChange={modoEdicao ? () => {} : setLixoHoje}[m
[31m-              style={styles.picker}[m
[31m-              enabled={!modoEdicao}[m
[31m-            >[m
[31m-              <Picker.Item label="Sim" value="Sim" />[m
[31m-              <Picker.Item label="N√£o" value="N√£o" />[m
[31m-            </Picker>[m
[31m-          </View>[m
[31m-          <TouchableOpacity style={styles.smallButton} onPress={salvarPopup} disabled={modoEdicao}>[m
[31m-            <Text style={styles.smallButtonText}>Salvar</Text>[m
[31m-          </TouchableOpacity>[m
[31m-        </View>[m
[32m+[m[32m            <View style={styles.pickerWrapper}>[m
[32m+[m[32m              <Picker[m
[32m+[m[32m                selectedValue={lixoHoje}[m
[32m+[m[32m                onValueChange={setLixoHoje}[m[41m [m
[32m+[m[32m                style={styles.picker}[m
[32m+[m[32m                enabled={!modoEdicao}[m[41m [m
[32m+[m[32m              >[m
[32m+[m[32m                <Picker.Item label="Sim" value="Sim" />[m
[32m+[m[32m                <Picker.Item label="N√£o" value="N√£o" />[m
[32m+[m[32m              </Picker>[m
[32m+[m[32m            </View>[m
[32m+[m[32m    <TouchableOpacity[m
[32m+[m[32m        style={styles.smallButton}[m
[32m+[m[32m        onPress={handleSalvarLixoHoje} // <-- CHAMA A NOVA FUN√á√ÉO DE SALVAR[m
[32m+[m[32m        disabled={modoEdicao}[m
[32m+[m[32m    >[m
[32m+[m[32m        <Text style={styles.smallButtonText}>Salvar</Text>[m
[32m+[m[32m    </TouchableOpacity>[m
[32m+[m[32m    </View>[m
       </ScrollView>[m
 [m
       <View style={styles.navBar}>[m
[36m@@ -141,6 +211,7 @@[m [mexport default function VerImovel() {[m
   );[m
 }[m
 [m
[32m+[m
 const styles = StyleSheet.create({[m
   container: { flex: 1, backgroundColor: 'white' },[m
   header: {[m
[36m@@ -150,7 +221,7 @@[m [mconst styles = StyleSheet.create({[m
     paddingBottom: 20,[m
     alignItems: 'center',[m
   },[m
[31m-  backButton: { position: 'absolute', left: 20, top: 20, padding: 10 },[m
[32m+[m[32m  backButton: { position: 'absolute', left: 20, top: 20, padding: 25 },[m
   houseIcon: { marginTop: 10 },[m
   imovelName: {[m
     fontSize: 24,[m
[36m@@ -158,6 +229,7 @@[m [mconst styles = StyleSheet.create({[m
     color: '#2F2F2F',[m
     textAlign: 'center',[m
     marginTop: 20,[m
[32m+[m[32m    backgroundColor: 'rgba(0,0,0,0.2)',[m
   },[m
   imovelAddress: {[m
     fontSize: 16,[m
[1mdiff --git a/app/_layout.tsx b/app/_layout.tsx[m
[1mindex 93c46b4..9c7ba4d 100644[m
[1m--- a/app/_layout.tsx[m
[1m+++ b/app/_layout.tsx[m
[36m@@ -1,7 +1,7 @@[m
 import '~/global.css';[m
 [m
 import { DarkTheme, DefaultTheme, Theme, ThemeProvider } from '@react-navigation/native';[m
[31m-import { Stack } from 'expo-router';[m
[32m+[m[32mimport { Slot } from 'expo-router'; // 'Stack' was replaced with 'Slot'[m
 import { StatusBar } from 'expo-status-bar';[m
 import * as React from 'react';[m
 import { Platform, Text, ViewProps } from 'react-native';[m
[36m@@ -10,9 +10,9 @@[m [mimport { useColorScheme } from '~/lib/useColorScheme';[m
 import { PortalHost } from '@rn-primitives/portal';[m
 import { setAndroidNavigationBar } from '~/lib/android-navigation-bar';[m
 import { TanStackProvider } from '~/providers/tanstack-provider';[m
[32m+[m[32mimport { ImoveisProvider } from '~/providers/Imoveis-contexts';[m
 import type { FC } from 'react';[m
 [m
[31m-// ‚úÖ Tipagem expl√≠cita para ThemeToggle[m
 let ThemeToggle: FC<ViewProps> | null = null;[m
 [m
 try {[m
[36m@@ -33,7 +33,6 @@[m [mconst DARK_THEME: Theme = {[m
 };[m
 [m
 export {[m
[31m-  // Catch any errors thrown by the Layout component.[m
   ErrorBoundary,[m
 } from 'expo-router';[m
 [m
[36m@@ -57,29 +56,19 @@[m [mexport default function RootLayout() {[m
   if (!isColorSchemeLoaded) return null;[m
 [m
   return ([m
[31m-    <>[m
     <ThemeProvider value={isDarkColorScheme ? DARK_THEME : LIGHT_THEME}>[m
[31m-     <TanStackProvider>[m
[31m-      <StatusBar style={isDarkColorScheme ? 'light' : 'dark'} />[m
[31m-      <Stack>[m
[31m-        <Stack.Screen[m
[31m-          name="index"[m
[31m-          options={{[m
[31m-            title: 'Starter Base',[m
[31m-            // ‚úÖ Evita crash no header se ThemeToggle falhar[m
[31m-            headerRight: () =>[m
[31m-              ThemeToggle ? <ThemeToggle /> : <Text style={{ marginRight: 10 }}>‚öôÔ∏è</Text>,[m
[31m-          }}[m
[31m-        />[m
[31m-      </Stack>[m
[31m-    </TanStackProvider>[m
[31m-   </ThemeProvider>[m
[31m-  <PortalHost />[m
[31m-  </>[m
[32m+[m[32m      <TanStackProvider>[m
[32m+[m[32m        <ImoveisProvider>[m
[32m+[m[32m          <StatusBar style={isDarkColorScheme ? 'light' : 'dark'} />[m
[32m+[m[32m          <Slot /> {/* The Slot component will render the current route */}[m
[32m+[m[32m          <PortalHost />[m
[32m+[m[32m        </ImoveisProvider>[m
[32m+[m[32m      </TanStackProvider>[m
[32m+[m[32m    </ThemeProvider>[m
   );[m
 }[m
 [m
 const useIsomorphicLayoutEffect =[m
   Platform.OS === 'web' && typeof window === 'undefined'[m
     ? React.useEffect[m
[31m-    : React.useLayoutEffect;[m
[32m+[m[32m    : React.useLayoutEffect;[m
\ No newline at end of file[m
[1mdiff --git a/assets/images/metal.png b/assets/images/metal.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c279741[m
Binary files /dev/null and b/assets/images/metal.png differ
[1mdiff --git a/assets/images/papel.png b/assets/images/papel.png[m
[1mnew file mode 100644[m
[1mindex 0000000..9a626be[m
Binary files /dev/null and b/assets/images/papel.png differ
[1mdiff --git a/assets/images/plastico.png b/assets/images/plastico.png[m
[1mnew file mode 100644[m
[1mindex 0000000..659c0fd[m
Binary files /dev/null and b/assets/images/plastico.png differ
[1mdiff --git a/assets/images/vidro.png b/assets/images/vidro.png[m
[1mnew file mode 100644[m
[1mindex 0000000..9898892[m
Binary files /dev/null and b/assets/images/vidro.png differ
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 87cf4c4..1900500 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -9,7 +9,7 @@[m
       "version": "1.0.0",[m
       "hasInstallScript": true,[m
       "dependencies": {[m
[31m-        "@react-native-async-storage/async-storage": "^1.24.0",[m
[32m+[m[32m        "@react-native-async-storage/async-storage": "2.1.2",[m
         "@react-native-picker/picker": "2.11.0",[m
         "@react-navigation/native": "^7.0.14",[m
         "@react-navigation/stack": "^7.2.10",[m
[36m@@ -40,19 +40,19 @@[m
         "@rn-primitives/toggle-group": "^1.1.0",[m
         "@rn-primitives/tooltip": "~1.1.0",[m
         "@rn-primitives/types": "~1.1.0",[m
[31m-        "@tanstack/react-query": "^5.75.4",[m
[32m+[m[32m        "@tanstack/react-query": "^5.76.1",[m
         "class-variance-authority": "^0.7.0",[m
         "clsx": "^2.1.0",[m
         "dotenv": "^16.5.0",[m
[31m-        "expo": "53.0.0",[m
[31m-        "expo-linking": "~7.1.4",[m
[32m+[m[32m        "expo": "53.0.9",[m
[32m+[m[32m        "expo-linking": "7.1.5",[m
         "expo-navigation-bar": "~4.2.4",[m
[31m-        "expo-router": "^5.0.5",[m
[32m+[m[32m        "expo-router": "5.0.7",[m
         "expo-splash-screen": "~0.30.8",[m
         "expo-status-bar": "~2.2.3",[m
         "expo-system-ui": "~5.0.7",[m
         "firebase": "^11.6.1",[m
[31m-        "lucide-react-native": "^0.507.0",[m
[32m+[m[32m        "lucide-react-native": "^0.511.0",[m
         "nativewind": "^4.1.23",[m
         "react": "18.3.1",[m
         "react-datepicker": "^8.3.0",[m
[36m@@ -78,7 +78,7 @@[m
         "@tanstack/eslint-plugin-query": "^5.74.7",[m
         "@types/react": "~19.0.10",[m
         "@types/react-native-vector-icons": "^6.4.18",[m
[31m-        "expo-location": "~18.1.4",[m
[32m+[m[32m        "expo-location": "^18.1.5",[m
         "react": "19.0.0",[m
         "react-dom": "19.0.0",[m
         "react-native": "0.79.2",[m
[36m@@ -1634,29 +1634,29 @@[m
       }[m
     },[m
     "node_modules/@expo/cli": {[m
[31m-      "version": "0.24.6",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/cli/-/cli-0.24.6.tgz",[m
[31m-      "integrity": "sha512-z+OgcCr8HNTm1oOGJl5Lq0iRDflXSPA6iQosnwlD5gZwbq6dF9ws4zW9yM5UOGOEb9TfmcYXBNdqhBM8k7biyw==",[m
[32m+[m[32m      "version": "0.24.13",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/cli/-/cli-0.24.13.tgz",[m
[32m+[m[32m      "integrity": "sha512-2LSdbvYs+WmUljnplQXMCUyNzyX4H+F4l8uExfA1hud25Bl5kyaGrx1jjtgNxMTXmfmMjvgBdK798R50imEhkA==",[m
       "license": "MIT",[m
       "dependencies": {[m
         "@0no-co/graphql.web": "^1.0.8",[m
         "@babel/runtime": "^7.20.0",[m
         "@expo/code-signing-certificates": "^0.0.5",[m
[31m-        "@expo/config": "~11.0.5",[m
[31m-        "@expo/config-plugins": "~9.1.7",[m
[32m+[m[32m        "@expo/config": "~11.0.10",[m
[32m+[m[32m        "@expo/config-plugins": "~10.0.2",[m
         "@expo/devcert": "^1.1.2",[m
[31m-        "@expo/env": "~1.0.4",[m
[31m-        "@expo/image-utils": "^0.7.3",[m
[31m-        "@expo/json-file": "^9.1.3",[m
[31m-        "@expo/metro-config": "~0.20.8",[m
[31m-        "@expo/osascript": "^2.2.3",[m
[31m-        "@expo/package-manager": "^1.8.3",[m
[31m-        "@expo/plist": "^0.3.3",[m
[31m-        "@expo/prebuild-config": "^9.0.2",[m
[32m+[m[32m        "@expo/env": "~1.0.5",[m
[32m+[m[32m        "@expo/image-utils": "^0.7.4",[m
[32m+[m[32m        "@expo/json-file": "^9.1.4",[m
[32m+[m[32m        "@expo/metro-config": "~0.20.14",[m
[32m+[m[32m        "@expo/osascript": "^2.2.4",[m
[32m+[m[32m        "@expo/package-manager": "^1.8.4",[m
[32m+[m[32m        "@expo/plist": "^0.3.4",[m
[32m+[m[32m        "@expo/prebuild-config": "^9.0.6",[m
         "@expo/spawn-async": "^1.7.2",[m
         "@expo/ws-tunnel": "^1.0.1",[m
         "@expo/xcpretty": "^4.3.0",[m
[31m-        "@react-native/dev-middleware": "0.79.1",[m
[32m+[m[32m        "@react-native/dev-middleware": "0.79.2",[m
         "@urql/core": "^5.0.6",[m
         "@urql/exchange-retry": "^1.3.0",[m
         "accepts": "^1.3.8",[m
[36m@@ -1673,7 +1673,7 @@[m
         "freeport-async": "^2.0.0",[m
         "getenv": "^1.0.0",[m
         "glob": "^10.4.2",[m
[31m-        "lan-network": "^0.1.4",[m
[32m+[m[32m        "lan-network": "^0.1.6",[m
         "minimatch": "^9.0.0",[m
         "node-forge": "^1.3.1",[m
         "npm-package-arg": "^11.0.0",[m
[36m@@ -1706,9 +1706,9 @@[m
       }[m
     },[m
     "node_modules/@expo/cli/node_modules/semver": {[m
[31m-      "version": "7.7.1",[m
[31m-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",[m
[31m-      "integrity": "sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==",[m
[32m+[m[32m      "version": "7.7.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",[m
       "license": "ISC",[m
       "bin": {[m
         "semver": "bin/semver.js"[m
[36m@@ -1728,14 +1728,14 @@[m
       }[m
     },[m
     "node_modules/@expo/config": {[m
[31m-      "version": "11.0.8",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/config/-/config-11.0.8.tgz",[m
[31m-      "integrity": "sha512-udLrpW4SvXUwF+ntJ0RzEjRbFoSS7Tr/rMrvhfISHWGbcZ09+c+QkI0O8y1sEBWQDpI/IlC9REPqGm5b7HweDw==",[m
[32m+[m[32m      "version": "11.0.10",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/config/-/config-11.0.10.tgz",[m
[32m+[m[32m      "integrity": "sha512-8S8Krr/c5lnl0eF03tA2UGY9rGBhZcbWKz2UWw5dpL/+zstwUmog8oyuuC8aRcn7GiTQLlbBkxcMeT8sOGlhbA==",[m
       "license": "MIT",[m
       "dependencies": {[m
         "@babel/code-frame": "~7.10.4",[m
         "@expo/config-plugins": "~10.0.2",[m
[31m-        "@expo/config-types": "^53.0.3",[m
[32m+[m[32m        "@expo/config-types": "^53.0.4",[m
         "@expo/json-file": "^9.1.4",[m
         "deepmerge": "^4.3.1",[m
         "getenv": "^1.0.0",[m
[36m@@ -1749,14 +1749,14 @@[m
       }[m
     },[m
     "node_modules/@expo/config-plugins": {[m
[31m-      "version": "9.1.7",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/config-plugins/-/config-plugins-9.1.7.tgz",[m
[31m-      "integrity": "sha512-8dJzOesaQS+8XuT49pdSHej1z6XG3x2fqN2O3v807ri8uhxm2N9P6+iZBn19xv9+7OxraOc2tH3nEIWE19Za0w==",[m
[32m+[m[32m      "version": "10.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/config-plugins/-/config-plugins-10.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-TzUn3pPdpwCS0yYaSlZOClgDmCX8N4I2lfgitX5oStqmvpPtB+vqtdyqsVM02fQ2tlJIAqwBW+NHaHqqy8Jv7g==",[m
       "license": "MIT",[m
       "dependencies": {[m
[31m-        "@expo/config-types": "^53.0.0",[m
[31m-        "@expo/json-file": "~9.1.3",[m
[31m-        "@expo/plist": "^0.3.3",[m
[32m+[m[32m        "@expo/config-types": "^53.0.3",[m
[32m+[m[32m        "@expo/json-file": "~9.1.4",[m
[32m+[m[32m        "@expo/plist": "^0.3.4",[m
         "@expo/sdk-runtime-versions": "^1.0.0",[m
         "chalk": "^4.1.2",[m
         "debug": "^4.3.5",[m
[36m@@ -1771,9 +1771,9 @@[m
       }[m
     },[m
     "node_modules/@expo/config-plugins/node_modules/semver": {[m
[31m-      "version": "7.7.1",[m
[31m-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",[m
[31m-      "integrity": "sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==",[m
[32m+[m[32m      "version": "7.7.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",[m
       "license": "ISC",[m
       "bin": {[m
         "semver": "bin/semver.js"[m
[36m@@ -1783,9 +1783,9 @@[m
       }[m
     },[m
     "node_modules/@expo/config-types": {[m
[31m-      "version": "53.0.3",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/config-types/-/config-types-53.0.3.tgz",[m
[31m-      "integrity": "sha512-V1e6CiM4TXtGxG/W2Msjp/QOx/vikLo5IUGMvEMjgAglBfGYx3PXfqsUb5aZDt6kqA3bDDwFuZoS5vNm/SYwSg==",[m
[32m+[m[32m      "version": "53.0.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/config-types/-/config-types-53.0.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-0s+9vFx83WIToEr0Iwy4CcmiUXa5BgwBmEjylBB2eojX5XAMm9mJvw9KpjAb8m7zq2G0Q6bRbeufkzgbipuNQg==",[m
       "license": "MIT"[m
     },[m
     "node_modules/@expo/config/node_modules/@babel/code-frame": {[m
[36m@@ -1797,28 +1797,6 @@[m
         "@babel/highlight": "^7.10.4"[m
       }[m
     },[m
[31m-    "node_modules/@expo/config/node_modules/@expo/config-plugins": {[m
[31m-      "version": "10.0.2",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/config-plugins/-/config-plugins-10.0.2.tgz",[m
[31m-      "integrity": "sha512-TzUn3pPdpwCS0yYaSlZOClgDmCX8N4I2lfgitX5oStqmvpPtB+vqtdyqsVM02fQ2tlJIAqwBW+NHaHqqy8Jv7g==",[m
[31m-      "license": "MIT",[m
[31m-      "dependencies": {[m
[31m-        "@expo/config-types": "^53.0.3",[m
[31m-        "@expo/json-file": "~9.1.4",[m
[31m-        "@expo/plist": "^0.3.4",[m
[31m-        "@expo/sdk-runtime-versions": "^1.0.0",[m
[31m-        "chalk": "^4.1.2",[m
[31m-        "debug": "^4.3.5",[m
[31m-        "getenv": "^1.0.0",[m
[31m-        "glob": "^10.4.2",[m
[31m-        "resolve-from": "^5.0.0",[m
[31m-        "semver": "^7.5.4",[m
[31m-        "slash": "^3.0.0",[m
[31m-        "slugify": "^1.6.6",[m
[31m-        "xcode": "^3.0.1",[m
[31m-        "xml2js": "0.6.0"[m
[31m-      }[m
[31m-    },[m
     "node_modules/@expo/config/node_modules/semver": {[m
       "version": "7.7.1",[m
       "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",[m
[36m@@ -1876,9 +1854,9 @@[m
       }[m
     },[m
     "node_modules/@expo/fingerprint": {[m
[31m-      "version": "0.12.3",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/fingerprint/-/fingerprint-0.12.3.tgz",[m
[31m-      "integrity": "sha512-jg49gkKtnK/cRfBYeWTZug5XGB4Hjw68dADi47wMQbivjY34Y0eKJADNbcV4V3r5N6o75Ts87AqfOVfUR9Ki5Q==",[m
[32m+[m[32m      "version": "0.12.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/fingerprint/-/fingerprint-0.12.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-HOJVvjiQYVHIouCOfFf4JRrQvBDIV/12GVG2iwbw1iGwmpQVkPgEXa9lN0f2yuS4J3QXHs73wr9jvuCjMmJlfw==",[m
       "license": "MIT",[m
       "dependencies": {[m
         "@expo/spawn-async": "^1.7.2",[m
[36m@@ -1897,9 +1875,9 @@[m
       }[m
     },[m
     "node_modules/@expo/fingerprint/node_modules/semver": {[m
[31m-      "version": "7.7.1",[m
[31m-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",[m
[31m-      "integrity": "sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==",[m
[32m+[m[32m      "version": "7.7.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",[m
       "license": "ISC",[m
       "bin": {[m
         "semver": "bin/semver.js"[m
[36m@@ -1957,18 +1935,18 @@[m
       }[m
     },[m
     "node_modules/@expo/metro-config": {[m
[31m-      "version": "0.20.8",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/metro-config/-/metro-config-0.20.8.tgz",[m
[31m-      "integrity": "sha512-ISq8AMeXyO6sPPmUI4FtEV3UjE3/VwP8Bz4W/jxMSb8yzwTMuicn1Xt8qGgGAyURDtthiEmVurqYTu8+dN20Mw==",[m
[32m+[m[32m      "version": "0.20.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/metro-config/-/metro-config-0.20.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-tYDDubuZycK+NX00XN7BMu73kBur/evOPcKfxc+UBeFfgN2EifOITtdwSUDdRsbtJ2OnXwMY1HfRUG3Lq3l4cw==",[m
       "license": "MIT",[m
       "dependencies": {[m
         "@babel/core": "^7.20.0",[m
         "@babel/generator": "^7.20.5",[m
         "@babel/parser": "^7.20.0",[m
         "@babel/types": "^7.20.0",[m
[31m-        "@expo/config": "~11.0.5",[m
[31m-        "@expo/env": "~1.0.4",[m
[31m-        "@expo/json-file": "~9.1.3",[m
[32m+[m[32m        "@expo/config": "~11.0.9",[m
[32m+[m[32m        "@expo/env": "~1.0.5",[m
[32m+[m[32m        "@expo/json-file": "~9.1.4",[m
         "@expo/spawn-async": "^1.7.2",[m
         "chalk": "^4.1.0",[m
         "debug": "^4.3.2",[m
[36m@@ -1987,6 +1965,7 @@[m
       "version": "16.4.7",[m
       "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.4.7.tgz",[m
       "integrity": "sha512-47qPchRCykZC03FhkYAhrvwU4xDBFIj1QPqaarj6mdM/hgUzfPHcpkHJOn3mJAufFeeAxAzeGsr5X0M4k6fLZQ==",[m
[32m+[m[32m      "license": "BSD-2-Clause",[m
       "engines": {[m
         "node": ">=12"[m
       },[m
[36m@@ -2042,14 +2021,14 @@[m
       }[m
     },[m
     "node_modules/@expo/prebuild-config": {[m
[31m-      "version": "9.0.5",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/prebuild-config/-/prebuild-config-9.0.5.tgz",[m
[31m-      "integrity": "sha512-oiSVU5ePu9lsOvn5p4xplqjzPlcZHzKYwzuonTa9GCH1GxcOEIBsvMVQiHBXHtqvgV2dztjm34kdXV//+9jtCA==",[m
[32m+[m[32m      "version": "9.0.6",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@expo/prebuild-config/-/prebuild-config-9.0.6.tgz",[m
[32m+[m[32m      "integrity": "sha512-HDTdlMkTQZ95rd6EpvuLM+xkZV03yGLc38FqI37qKFLJtUN1WnYVaWsuXKoljd1OrVEVsHe6CfqKwaPZ52D56Q==",[m
       "license": "MIT",[m
       "dependencies": {[m
[31m-        "@expo/config": "~11.0.7",[m
[32m+[m[32m        "@expo/config": "~11.0.9",[m
         "@expo/config-plugins": "~10.0.2",[m
[31m-        "@expo/config-types": "^53.0.3",[m
[32m+[m[32m        "@expo/config-types": "^53.0.4",[m
         "@expo/image-utils": "^0.7.4",[m
         "@expo/json-file": "^9.1.4",[m
         "@react-native/normalize-colors": "0.79.2",[m
[36m@@ -2059,28 +2038,6 @@[m
         "xml2js": "0.6.0"[m
       }[m
     },[m
[31m-    "node_modules/@expo/prebuild-config/node_modules/@expo/config-plugins": {[m
[31m-      "version": "10.0.2",[m
[31m-      "resolved": "https://registry.npmjs.org/@expo/config-plugins/-/config-plugins-10.0.2.tgz",[m
[31m-      "integrity": "sha512-TzUn3pPdpwCS0yYaSlZOClgDmCX8N4I2lfgitX5oStqmvpPtB+vqtdyqsVM02fQ2tlJIAqwBW+NHaHqqy8Jv7g==",[m
[31m-      "license": "MIT",[m
[31m-      "dependencies": {[m
[31m-        "@expo/config-types": "^53.0.3",[m
[31m-        "@expo/json-file": "~9.1.4",[m
[31m-        "@expo/plist": "^0.3.4",[m
[31m-        "@expo/sdk-runtime-versions": "^1.0.0",[m
[31m-        "chalk": "^4.1.2",[m
[31m-        "debug": "^4.3.5",[m
[31m-        "getenv": "^1.0.0",[m
[31m-        "glob": "^10.4.2",[m
[31m-        "resolve-from": "^5.0.0",[m
[31m-        "semver": "^7.5.4",[m
[31m-        "slash": "^3.0.0",[m
[31m-        "slugify": "^1.6.6",[m
[31m-        "xcode": "^3.0.1",[m
[31m-        "xml2js": "0.6.0"[m
[31m-      }[m
[31m-    },[m
     "node_modules/@expo/prebuild-config/node_modules/semver": {[m
       "version": "7.7.1",[m
       "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",[m
[36m@@ -2296,14 +2253,15 @@[m
       "integrity": "sha512-kRVpIl4vVGJ4baogMDINbyrIOtOxqhkZQg4jTq3l8Lw6WSk0xfpEYzezFu+Kl4ve4fbPl79dvwRtaFqAC/ucCw==",[m
       "license": "Apache-2.0"[m
     },[m
[31m-    "node_modules/@firebase/auth": {[m
[31m-      "version": "1.10.1",[m
[31m-      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.10.1.tgz",[m
[31m-      "integrity": "sha512-YsCppueiV4AsMTf4oQ49KiADvtqKnG5j9Q4mBv7xGa0hnSTAX3jpdwlTluU3n0JxUT2tbPkeOESJmF4a9GWlMQ==",[m
[32m+[m[32m    "node_modules/@firebase/auth-compat": {[m
[32m+[m[32m      "version": "0.5.21",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.21.tgz",[m
[32m+[m[32m      "integrity": "sha512-FrUEcqLEWVA3mGyq96wWVxXzEIWTrdBctgQuC4MVuCyH5rJZu1kPsLKdeCYuYbqTz7i94DNuGxMNIW3Y5eFqaQ==",[m
       "license": "Apache-2.0",[m
       "dependencies": {[m
[32m+[m[32m        "@firebase/auth": "1.10.1",[m
[32m+[m[32m        "@firebase/auth-types": "0.13.0",[m
         "@firebase/component": "0.6.13",[m
[31m-        "@firebase/logger": "0.4.4",[m
         "@firebase/util": "1.11.0",[m
         "tslib": "^2.1.0"[m
       },[m
[36m@@ -2311,24 +2269,17 @@[m
         "node": ">=18.0.0"[m
       },[m
       "peerDependencies": {[m
[31m-        "@firebase/app": "0.x",[m
[31m-        "@react-native-async-storage/async-storage": "^1.18.1"[m
[31m-      },[m
[31m-      "peerDependenciesMeta": {[m
[31m-        "@react-native-async-storage/async-storage": {[m
[31m-          "optional": true[m
[31m-        }[m
[32m+[m[32m        "@firebase/app-compat": "0.x"[m
       }[m
     },[m
[31m-    "node_modules/@firebase/auth-compat": {[m
[31m-      "version": "0.5.21",[m
[31m-      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.21.tgz",[m
[31m-      "integrity": "sha512-FrUEcqLEWVA3mGyq96wWVxXzEIWTrdBctgQuC4MVuCyH5rJZu1kPsLKdeCYuYbqTz7i94DNuGxMNIW3Y5eFqaQ==",[m
[32m+[m[32m    "node_modules/@firebase/auth-compat/node_modules/@firebase/auth": {[m
[32m+[m[32m      "version": "1.10.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.10.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-YsCppueiV4AsMTf4oQ49KiADvtqKnG5j9Q4mBv7xGa0hnSTAX3jpdwlTluU3n0JxUT2tbPkeOESJmF4a9GWlMQ==",[m
       "license": "Apache-2.0",[m
       "dependencies": {[m
[31m-        "@firebase/auth": "1.10.1",[m
[31m-        "@firebase/auth-types": "0.13.0",[m
         "@fireba